}
if(dice.x2 == 7){
print("He loses!")
}
}
dice.x1 <- sum(ceiling(6*runif(2)))
if(dice.x1 %in% c(7, 11)){
print("He Wins!")
}else if(dice.x1 %in% c(2, 3, 12)){
print("He loses!")
}else{
dice.x2 <- sum(ceiling(6*runif(2)))
while(dice.x2 != c(7))
if(dice.x2 == dice.x1){
print("He wins!")
}
if(dice.x2 == 7){
print("He loses!")
}
}
dice.x1 <- sum(ceiling(6*runif(2)))
if(dice.x1 %in% c(7, 11)){
print("He Wins!")
}else if(dice.x1 %in% c(2, 3, 12)){
print("He loses!")
}else{
dice.x2 <- sum(ceiling(6*runif(2)))
while(dice.x2 != c(7))
if(dice.x2 == dice.x1){
print("He wins!")
}
if(dice.x2 == 7){
print("He loses!")
}
}
save.image("C:/Users/Chak/Desktop/Homework 1.RData")
dice.x1 <- sum(ceiling(6*runif(2)))
if(dice.x1 %in% c(7, 11)){
print("He Wins!")
}else if(dice.x1 %in% c(2, 3, 12)){
print("He loses!")
}else{
dice.x2 <- sum(ceiling(6*runif(2)))
while(dice.x2 != c(7))
if(dice.x2 == dice.x1){
print("He wins!")
}
if(dice.x2 == 7){
print("He loses!")
}
}
dice.x1 <- sum(ceiling(6*runif(2)))
if(dice.x1 %in% c(7, 11)){
print("He Wins!")
}else if(dice.x1 %in% c(2, 3, 12)){
print("He loses!")
}else{
dice.x2 <- sum(ceiling(6*runif(2)))
while(dice.x2 != c(7)){
if(dice.x2 == dice.x1)
print("He wins!")
}
if(dice.x2 == 7){
print("He loses!")
}
}
dice.x1 <- sum(ceiling(6*runif(2)))
if(dice.x1 %in% c(7, 11)){
print("He Wins!")
}else if(dice.x1 %in% c(2, 3, 12)){
print("He loses!")
}else{
dice.x2 <- sum(ceiling(6*runif(2)))
while(dice.x2 != c(7)){
if(dice.x2 == dice.x1)
print("He wins!")
}
if(dice.x2 == 7){
print("He loses!")
}
}
num.perfect <- 2
count <- 0
iter <- 2
while(count <= num.perfect){
divisor <- 1
}for(i in 2:(iter-1)){
if(iter%%i==0) divisor <- c(divisor, i)
} # end for loop
if(sum(divisor)=iter){
print(paste(iter, " is a perfect number", sep="")
count <- count + 1
} # end if
iter <- iter + 1
} # end while loop
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 != dice.x1)
dice.x2 <- dice.x2+1
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 != dice.x1)
dice.x2 <- dice.x2+1
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 != dice.x1)
dice.x2 <- dice.x2+1
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 != dice.x1)
dice.x2 <- dice.x2+1
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 != dice.x1)
dice.x2 <- dice.x2+1
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 != dice.x1)
dice.x2 <- dice.x2+1
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 != dice.x1)
dice.x2 <- dice.x2+1
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 != dice.x1)
dice.x2 <- dice.x2+1
}
if(dice.x2 == 7){                     #If second dice roll is 7
print("He loses!")                  #Print 'He loses!'
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 != dice.x1)
dice.x2 <- dice.x2+1
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 != dice.x1)
dice.x2 <- dice.x2+1
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 != dice.x1)
dice.x2 <- dice.x2+1
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 != dice.x1)
dice.x2 <- dice.x2+1
}
dice.x1 <- sum(ceiling(6*runif(2)))     #Set first dice roll outcome to dice.x1
if(dice.x1 %in% c(7, 11)){              #If outcome is 7 or 11
print("He Wins!")                     #Print 'He wins!'
}else if(dice.x1 %in% c(2, 3, 12)){     #If outcome is 2, 3, or 12
print("He loses!")                    #Print 'He loses!'
}else{                                  #Extend if/else statement for alternatives
dice.x2 <- sum(ceiling(6*runif(2)))   #Set second dice roll outcome to dice.x2
while(dice.x2 != c(7)){               #Set while loop to not equal to 7
if(dice.x2 == dice.x1)              #If dice.x2 outcome = dice.x1 outcome
print("He wins!")                 #Print 'He wins!'
}
if(dice.x2 != dice.x1)
dice.x2 <- dice.x2+1
}
setwd("C:/Users/Chak/Desktop/Computation and Statistics/Homework 2")
load("C:/Users/Chak/Desktop/Computation and Statistics/Homework 2/HW2_Chak Wong.RData")
library(maps)
library(maptools)
library(RColorBrewer)
library(rgdal)
map <- readOGR(dsn="Map", layer="tl_2012_36_tract")
row.names(xy.final) <- x[-1,2]
#Extract map area representing New York County census tracts
row.names(map) <- as.character(map$GEOID)
map <- map[is.element(row.names(map), row.names(xy.final)),]
xy.final <- xy.final[row.names(map),]
#Attach data to map
map <- spCbind(map, xy.final)
plot(map)
library(RColorBrewer)
#Variable to color map by
plot.variable <- map@data$Index
#Construct range of values for each color
breaks.factor <-cut(plot.variable, breaks=seq(6.303566, -9.748751, length=6))
length(levels(breaks.factor))
#Assign Color
color.palette <- brewer.pal(length(levels(breaks.factor)), "Spectral")
color.coding <- color.palette[as.numeric(breaks.factor)]
plot(map, col=color.coding)
legend("topleft", legend=attributes(breaks.factor)$levels,
fill=color.palette, cex=.8, bty="n", y.intersp=1.2, ncol=3)
map@data$GEOID
text(-95.85102, 51, cex=1.5,
labels="Townsend Index in New York County")
Find <- "Census Tract 145, New York County, New York"
match(Find, xy.final$Census.Tract)
274 #Row 274 contains county that contains Lowenstein
#Lowenstein Index
Low <- xy.final[274,10]
#Sort Index values and find Index value rank for Lowenstein
Sorted <- sort(xy.final$Index, decreasing=T)
match(Low,Sorted)
Low <- xy.final[274,10]
Sorted <- sort(xy.final$Index, decreasing=T)
match(Low,Sorted)
subset(xy.final, Index==match(Low,Sorted))
text(coordinates(map[17,]), labels="145\n(Lowenstein Building)", cex=1.2, pch=19)
legend("bottomright", legend="Lowenstein Building", bty="n")
pdf("HW2_NYCounty_HeatMap.pdf", width=8, height=8)
source('C:/Users/Chak/Desktop/Computation and Statistics/Homework 2/HW2_Chak Wong.R')
source('C:/Users/Chak/Desktop/Computation and Statistics/Homework 2/HW2_Chak Wong.R', echo=TRUE)
match(Low,Sorted)
subset(xy.final, Index==match(Low,Sorted))
text(coordinates(map[17,]), labels="145\n(Lowenstein Building)", cex=1.2, pch=19)
legend("bottomright", legend="Lowenstein Building", bty="n")
plot(map, col=color.coding)
library(maps)
library(maptools)
library(RColorBrewer)
library(rgdal)
map <- readOGR(dsn="Map", layer="tl_2012_36_tract")
#rownames for data frame
row.names(xy.final) <- x[-1,2]
#Extract map area representing New York County census tracts
row.names(map) <- as.character(map$GEOID)
map <- map[is.element(row.names(map), row.names(xy.final)),]
xy.final <- xy.final[row.names(map),]
#Attach data to map
map <- spCbind(map, xy.final)
plot(map)
